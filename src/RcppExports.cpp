// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpparma_hello_world
arma::mat rcpparma_hello_world();
RcppExport SEXP _gmhs2_rcpparma_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpparma_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_innerproduct
double rcpparma_innerproduct(const arma::colvec& x);
RcppExport SEXP _gmhs2_rcpparma_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_innerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_outerproduct
arma::mat rcpparma_outerproduct(const arma::colvec& x);
RcppExport SEXP _gmhs2_rcpparma_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_outerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_bothproducts
Rcpp::List rcpparma_bothproducts(const arma::colvec& x);
RcppExport SEXP _gmhs2_rcpparma_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_bothproducts(x));
    return rcpp_result_gen;
END_RCPP
}
// binomialCoefficient
double binomialCoefficient(int n, int x);
RcppExport SEXP _gmhs2_binomialCoefficient(SEXP nSEXP, SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(binomialCoefficient(n, x));
    return rcpp_result_gen;
END_RCPP
}
// binomialPMF
double binomialPMF(int n, int x, double p);
RcppExport SEXP _gmhs2_binomialPMF(SEXP nSEXP, SEXP xSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type x(xSEXP);
    Rcpp::traits::input_parameter< double >::type p(pSEXP);
    rcpp_result_gen = Rcpp::wrap(binomialPMF(n, x, p));
    return rcpp_result_gen;
END_RCPP
}
// marginalLikelihood
double marginalLikelihood(arma::mat Y, double mu, double tau2, int sim, double a_gamma, double b_gamma);
RcppExport SEXP _gmhs2_marginalLikelihood(SEXP YSEXP, SEXP muSEXP, SEXP tau2SEXP, SEXP simSEXP, SEXP a_gammaSEXP, SEXP b_gammaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< double >::type mu(muSEXP);
    Rcpp::traits::input_parameter< double >::type tau2(tau2SEXP);
    Rcpp::traits::input_parameter< int >::type sim(simSEXP);
    Rcpp::traits::input_parameter< double >::type a_gamma(a_gammaSEXP);
    Rcpp::traits::input_parameter< double >::type b_gamma(b_gammaSEXP);
    rcpp_result_gen = Rcpp::wrap(marginalLikelihood(Y, mu, tau2, sim, a_gamma, b_gamma));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_gmhs2_rcpparma_hello_world", (DL_FUNC) &_gmhs2_rcpparma_hello_world, 0},
    {"_gmhs2_rcpparma_innerproduct", (DL_FUNC) &_gmhs2_rcpparma_innerproduct, 1},
    {"_gmhs2_rcpparma_outerproduct", (DL_FUNC) &_gmhs2_rcpparma_outerproduct, 1},
    {"_gmhs2_rcpparma_bothproducts", (DL_FUNC) &_gmhs2_rcpparma_bothproducts, 1},
    {"_gmhs2_binomialCoefficient", (DL_FUNC) &_gmhs2_binomialCoefficient, 2},
    {"_gmhs2_binomialPMF", (DL_FUNC) &_gmhs2_binomialPMF, 3},
    {"_gmhs2_marginalLikelihood", (DL_FUNC) &_gmhs2_marginalLikelihood, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_gmhs2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
